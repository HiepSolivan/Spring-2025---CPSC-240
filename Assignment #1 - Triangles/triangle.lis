     1                                  ;****************************************************************************************************************************
     2                                  ; Program name: "Triangles".  The intent of this program is to compute the length of the third
     3                                  ; side of a triangle given other information about the triangle taken via user input.                                        *
     4                                  ; Copyright (C) 2025  Solivan Hiep                                                                                           *
     5                                  ; This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  *
     6                                  ; version 3 as published by the Free Software Foundation.                                                                    *
     7                                  ; This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied         *
     8                                  ; warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.     *
     9                                  ; A copy of the GNU General Public License v3 is available here:  <https://www.gnu.org/licenses/>.                           *
    10                                  ;****************************************************************************************************************************
    11                                  
    12                                  
    13                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3=========4=========5=========6=========7**
    14                                  
    15                                  ;Author information
    16                                  ;  Author name: Solivan Hiep
    17                                  ;  Author email: hiepsolivan@csu.fullerton.edu
    18                                  ;  CWID: 8848458756
    19                                  ;  Class: CPSC 240-03 - Class Nbr 13604
    20                                  ;
    21                                  ;Program information
    22                                  ;  Program name: Triangles
    23                                  ;  Programming languages: Main function in C; assembly function in X86-64; one bash function.
    24                                  ;  Date program began: 2025-Jan-26
    25                                  ;  Date of last update: 2025-Feb-5
    26                                  ;  Files in the program: geometry.c, triangle.asm, r.sh
    27                                  ;
    28                                  ;Purpose
    29                                  ;  The intent of this program is to compute the length of the third
    30                                  ;  side of a triangle given other information about the triangle taken via user input.
    31                                  ;  The program also sends accompanying messages to greet the user.
    32                                  ;  The assembly file performs the calculations to send back to the driver
    33                                  ;
    34                                  ;This file
    35                                  ;  File name: triangle.asm
    36                                  ;  Language: X86-64
    37                                  ;  Max page width: 172 columns
    38                                  ;  Assemble: nasm -f elf64 -l triangle.lis -o triangle.o triangle.asm
    39                                  ;  Page width: 172 columns
    40                                  ;  Optimal print specification: Landscape, 7 points, monospace, 8Â½x11 paper
    41                                  ;
    42                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3=========4=========5=========6=========7**
    43                                  ;
    44                                  ;===== Begin code area ====================================================================================================================================================
    45                                  
    46                                  ; Declarations
    47                                  extern cos
    48                                  extern fgets
    49                                  extern printf
    50                                  extern scanf
    51                                  extern sqrt
    52                                  extern stdin
    53                                  extern strlen
    54                                  global triangle
    55                                  
    56                                  uninitialized_size equ 48
    57                                  
    58                                  ; Declare initialized arrays
    59                                  segment .data
    60 00000000 506C6561736520656E-     last_name_message db "Please enter your last name: ", 0
    60 00000009 74657220796F757220-
    60 00000012 6C617374206E616D65-
    60 0000001B 3A2000             
    61 0000001E 506C6561736520656E-     user_title_suffix_message db "Please enter your title (Mr, Ms, Nurse, Engineer, etc): ", 0
    61 00000027 74657220796F757220-
    61 00000030 7469746C6520284D72-
    61 00000039 2C204D732C204E7572-
    61 00000042 73652C20456E67696E-
    61 0000004B 6565722C2065746329-
    61 00000054 3A2000             
    62 00000057 506C6561736520656E-     triangle_side_message db "Please enter the sides of your triangle separated by ws: ", 0
    62 00000060 746572207468652073-
    62 00000069 69646573206F662079-
    62 00000072 6F757220747269616E-
    62 0000007B 676C65207365706172-
    62 00000084 617465642062792077-
    62 0000008D 733A2000           
    63 00000091 506C6561736520656E-     angle_degrees_message db "Please enter the size in degrees of the angle between those sides: ", 0
    63 0000009A 746572207468652073-
    63 000000A3 697A6520696E206465-
    63 000000AC 6772656573206F6620-
    63 000000B5 74686520616E676C65-
    63 000000BE 206265747765656E20-
    63 000000C7 74686F736520736964-
    63 000000D0 65733A2000         
    64 000000D5 546865206C656E6774-     third_side_message db "The length of the third side is %.10lf units.", 10, 0
    64 000000DE 68206F662074686520-
    64 000000E7 746869726420736964-
    64 000000F0 6520697320252E3130-
    64 000000F9 6C6620756E6974732E-
    64 00000102 0A00               
    65 00000104 506C6561736520656E-     enjoy_message db "Please enjoy your triangles %s %s.", 10, 0
    65 0000010D 6A6F7920796F757220-
    65 00000116 747269616E676C6573-
    65 0000011F 2025732025732E0A00 
    66 00000128 257300                  string_format db "%s", 0
    67 0000012B 256C6600                eight_bit_float_format db "%lf", 0
    68 0000012F 256C6620256C6600        eight_bit_float_format_quantity_2 db "%lf %lf", 0
    69 00000137 0000000000806640        one_hundred_eighty dq 180.0
    70 0000013F 182D4454FB210940        pi dq 3.14159265358979323846
    71                                  
    72                                  ; Declare uninitialized arrays
    73                                  segment .bss
    74 00000000 <res 30h>               last_name_input resb uninitialized_size
    75 00000030 <res 30h>               user_title_suffix_input resb uninitialized_size
    76 00000060 <res 180h>              triangle_side_input_1 resq uninitialized_size
    77 000001E0 <res 180h>              triangle_side_input_2 resq uninitialized_size
    78                                  
    79                                  segment .text
    80                                  triangle:
    81                                  
    82                                  ; Back up GPRs
    83 00000000 55                      push rbp
    84 00000001 4889E5                  mov rbp, rsp
    85 00000004 53                      push rbx
    86 00000005 51                      push rcx
    87 00000006 52                      push rdx
    88 00000007 57                      push rdi
    89 00000008 56                      push rsi
    90 00000009 4150                    push r8
    91 0000000B 4151                    push r9
    92 0000000D 4152                    push r10
    93 0000000F 4153                    push r11
    94 00000011 4154                    push r12
    95 00000013 4155                    push r13
    96 00000015 4156                    push r14
    97 00000017 4157                    push r15
    98 00000019 9C                      pushf
    99                                  
   100                                  movsd [triangle_side_input_1], [pi]
   100          ******************       error: invalid combination of opcode and operands
   101                                  ; Print out side
   102 0000001A B800000000              mov rax, 0 
   103 0000001F 48BF-                   mov rdi, eight_bit_float_format
   103 00000021 [2B01000000000000] 
   104 00000029 488B3425[60000000]      mov rsi, [triangle_side_input_1]
   105 00000031 E8(00000000)            call printf
   106                                  
   107                                  ; Print out last name prompt
   108 00000036 B800000000              mov rax, 0
   109 0000003B 48BF-                   mov rdi, string_format
   109 0000003D [2801000000000000] 
   110 00000045 48BE-                   mov rsi, last_name_message
   110 00000047 [0000000000000000] 
   111 0000004F E8(00000000)            call printf
   112                                  
   113                                  ; User inputs last name
   114 00000054 B800000000              mov rax, 0
   115 00000059 48BF-                   mov rdi, last_name_input
   115 0000005B [0000000000000000] 
   116 00000063 BE30000000              mov rsi, uninitialized_size
   117 00000068 488B1425[00000000]      mov rdx, [stdin]
   118 00000070 E8(00000000)            call fgets
   119                                  
   120                                  ; Remove the newline from previous input (last name)
   121 00000075 B800000000              mov rax, 0
   122 0000007A 48BF-                   mov rdi, last_name_input
   122 0000007C [0000000000000000] 
   123 00000084 E8(00000000)            call strlen
   124 00000089 C680[FFFFFFFF]00        mov [last_name_input + rax - 1], byte 0
   125                                  
   126                                  ; Print out title suffix prompt
   127 00000090 B800000000              mov rax, 0
   128 00000095 48BF-                   mov rdi, string_format
   128 00000097 [2801000000000000] 
   129 0000009F 48BE-                   mov rsi, user_title_suffix_message
   129 000000A1 [1E00000000000000] 
   130 000000A9 E8(00000000)            call printf
   131                                  
   132                                  ; User inputs title suffix
   133 000000AE B800000000              mov rax, 0
   134 000000B3 48BF-                   mov rdi, user_title_suffix_input
   134 000000B5 [3000000000000000] 
   135 000000BD BE30000000              mov rsi, uninitialized_size
   136 000000C2 488B1425[00000000]      mov rdx, [stdin]
   137 000000CA E8(00000000)            call fgets
   138                                  
   139                                  ; Remove the newline from previous input (user title suffix)
   140 000000CF B800000000              mov rax, 0
   141 000000D4 48BF-                   mov rdi, user_title_suffix_input
   141 000000D6 [3000000000000000] 
   142 000000DE E8(00000000)            call strlen
   143 000000E3 C680[2F000000]00        mov [user_title_suffix_input + rax - 1], byte 0
   144                                  
   145                                  ; Print out triangle side prompt
   146 000000EA B800000000              mov rax, 0
   147 000000EF 48BF-                   mov rdi, string_format
   147 000000F1 [2801000000000000] 
   148 000000F9 48BE-                   mov rsi, triangle_side_message
   148 000000FB [5700000000000000] 
   149 00000103 E8(00000000)            call printf
   150                                  
   151                                  ; User inputs twp triangle sides separated by whitespace
   152 00000108 B800000000              mov rax, 0   ;Getting 2 floats, but no float arguments used
   153                                  ;push qword 0 ;Ensure scanf reads 16 bytes
   154                                  ;push qword 0
   155 0000010D 48BF-                   mov rdi, eight_bit_float_format_quantity_2
   155 0000010F [2F01000000000000] 
   156 00000117 48BE-                   mov rsi, triangle_side_input_1
   156 00000119 [6000000000000000] 
   157 00000121 48BA-                   mov rdx, triangle_side_input_2
   157 00000123 [E001000000000000] 
   158 0000012B E8(00000000)            call scanf
   159                                  ;pop rax
   160                                  ;pop rax
   161                                  
   162                                  ; Print out angle degrees prompt
   163 00000130 B800000000              mov rax, 0
   164 00000135 48BF-                   mov rdi, string_format
   164 00000137 [2801000000000000] 
   165 0000013F 48BE-                   mov rsi, angle_degrees_message
   165 00000141 [9100000000000000] 
   166 00000149 E8(00000000)            call printf
   167                                  
   168                                  ; User input angle degrees
   169 0000014E B800000000              mov rax, 0
   170 00000153 6A00                    push qword 0
   171 00000155 6A00                    push qword 0
   172 00000157 48BF-                   mov rdi, eight_bit_float_format
   172 00000159 [2B01000000000000] 
   173 00000161 4889E6                  mov rsi, rsp
   174 00000164 E8(00000000)            call scanf
   175 00000169 F2440F101424            movsd xmm10, [rsp] ;Store angle into xmm10
   176 0000016F 58                      pop rax
   177 00000170 58                      pop rax
   178                                  
   179                                  ; Convert the user inputted (xmm10) degrees into radians
   180 00000171 F20F100C25-             movsd xmm1, [pi] ;Because xmm1 is empty, move pi to prepare for operations
   180 00000176 [3F010000]         
   181 0000017A F20F101425-             movsd xmm2, [one_hundred_eighty] ;Because xmm2 is empty, move 180.0 to prepare for operations
   181 0000017F [37010000]         
   182 00000183 F20F5ECA                divsd xmm1, xmm2 ;Perform pi / 180.0
   183 00000187 F20F10D9                movsd xmm3, xmm1 ;Store results in xmm3
   184 0000018B F2410F10CA              movsd xmm1, xmm10 ;Move xmm10 (user-inputted angle) into xmm1 to prepare for operations
   185 00000190 F20F59CB                mulsd xmm1, xmm3 ;Perform (pi / 100) * degrees
   186 00000194 F20F10D9                movsd xmm3, xmm1
   187 00000198 F2440F10DB              movsd xmm11, xmm3 ;Store final results of radian_conversion into xmm11
   188                                  
   189                                  ; Compute the cosine of the angle
   190 0000019D B801000000              mov rax, 1
   191 000001A2 F2410F10C3              movsd xmm0, xmm11
   192 000001A7 E8(00000000)            call cos
   193 000001AC F2440F10E0              movsd xmm12, xmm0 ;Store cosine results into xmm12
   194                                  
   195                                  ; Compute 2ab * cos(C)
   196 000001B1 F20F100C25-             movsd xmm1, [triangle_side_input_1] ;Because xmm1 is empty, move side 1 to prepare for operations
   196 000001B6 [60000000]         
   197 000001BA F20F101425-             movsd xmm2, [triangle_side_input_2] ;Because xmm2 is empty, move side 2 to prepare for operations
   197 000001BF [E0010000]         
   198 000001C3 F2410F10DC              movsd xmm3, xmm12 ;Because xmm3 is empty, move cosine results to prepare for operations
   199 000001C8 F20F58C9                addsd xmm1, xmm1 ;Add xmm1 to itself to simulate 2a
   200 000001CC F20F59CA                mulsd xmm1, xmm2 ;Multiply xmm2 to xmm1 to simulate 2ab
   201 000001D0 F20F59CB                mulsd xmm1, xmm3 ;Multiply xmm3 to xmm1 to simulate 2ab * cos(C)
   202 000001D4 F2440F10E9              movsd xmm13, xmm1 ;Store final results of two_ab_cosc into xmm13
   203                                  
   204                                  ; Compute law of cosines [c^2 = a^2 + b^2 - (2ab * cos(C))]
   205 000001D9 F20F100C25-             movsd xmm1, [triangle_side_input_1] ;Because xmm1 is empty, move side 1 to prepare for operations
   205 000001DE [60000000]         
   206 000001E2 F20F101425-             movsd xmm2, [triangle_side_input_2] ;Because xmm2 is empty, move side 2 to prepare for operations
   206 000001E7 [E0010000]         
   207 000001EB F2410F10DD              movsd xmm3, xmm13 ;Because xmm3 is empty, move (2ab * cos(C)) to prepare for operations
   208 000001F0 F20F59C9                mulsd xmm1, xmm1 ;Multiply xmm1 to itself to simulate a^2
   209 000001F4 F20F59D2                mulsd xmm2, xmm2 ;Multiply xmm2 to itself to simulate b^2
   210 000001F8 F20F10E1                movsd xmm4, xmm1 ;Move xmm1 into xmm4 to store results
   211 000001FC F20F58E2                addsd xmm4, xmm2
   212 00000200 F20F5CE3                subsd xmm4, xmm3
   213 00000204 F2440F10F4              movsd xmm14, xmm4 ;Store final results of c_squared into xmm14
   214                                  
   215                                  ; Compute c by taking the square root of c^2
   216 00000209 B801000000              mov rax, 1
   217 0000020E F2410F10C6              movsd xmm0, xmm14
   218 00000213 E8(00000000)            call sqrt
   219 00000218 F2440F10F8              movsd xmm15, xmm0 ;Store results of sqrt c^2 into xmm15
   220                                  
   221                                  ; Print out third side message
   222 0000021D B801000000              mov rax, 1
   223 00000222 48BF-                   mov rdi, third_side_message
   223 00000224 [D500000000000000] 
   224 0000022C F2410F10C7              movsd xmm0, xmm15
   225 00000231 E8(00000000)            call printf
   226                                  
   227                                  ; Print out enjoy message
   228 00000236 B800000000              mov rax, 0
   229 0000023B 48BF-                   mov rdi, enjoy_message
   229 0000023D [0401000000000000] 
   230 00000245 48BE-                   mov rsi, user_title_suffix_input
   230 00000247 [3000000000000000] 
   231 0000024F 48BA-                   mov rdx, last_name_input
   231 00000251 [0000000000000000] 
   232 00000259 E8(00000000)            call printf
   233                                  
   234                                  ; Move results to the stack
   235 0000025E B800000000              mov rax, 0
   236 00000263 6A00                    push qword 0
   237 00000265 F2440F113C24            movsd [rsp], xmm15
   238                                  
   239                                  ; Send back the third side
   240 0000026B F20F100424              movsd xmm0, [rsp]
   241 00000270 58                      pop rax
   242                                  
   243                                  ; Restore the GPRs and close
   244 00000271 9D                      popf
   245 00000272 415F                    pop r15
   246 00000274 415E                    pop r14
   247 00000276 415D                    pop r13
   248 00000278 415C                    pop r12
   249 0000027A 415B                    pop r11
   250 0000027C 415A                    pop r10
   251 0000027E 4159                    pop r9
   252 00000280 4158                    pop r8
   253 00000282 5E                      pop rsi
   254 00000283 5F                      pop rdi
   255 00000284 5A                      pop rdx
   256 00000285 59                      pop rcx
   257 00000286 5B                      pop rbx
   258 00000287 5D                      pop rbp
   259 00000288 C3                      ret
